######################
# Stage: Builder
FROM ruby:2.7.1-alpine as Builder

RUN apk add --update --no-cache \
  build-base \
  ca-certificates \
  curl \
  git \
  postgresql-dev \
  nodejs-current \
  yarn \
  tzdata

WORKDIR /app

# Install gems
COPY Gemfile* /app/
RUN bundle config set --global frozen 1 \
  && bundle install -j4 --retry 3 \
  # Remove unneeded files (cached *.gem, *.o, *.c)
  && rm -rf /usr/local/bundle/cache/*.gem \
  && find /usr/local/bundle/gems/ -name "*.c" -delete \
  && find /usr/local/bundle/gems/ -name "*.o" -delete

# Install yarn packages
COPY package.json yarn.lock /app/
RUN yarn install

# Add the Rails app
COPY . /app

# Precompile assets
# ARG MASTER_KEY
# RUN RAILS_ENV=production RAILS_MASTER_KEY=${MASTER_KEY} bundle exec rake assets:precompile

# Remove folders not needed in resulting image
RUN rm -rf node_modules tmp/cache vendor/assets lib/assets spec

###############################
# Stage Runtime
FROM ruby:2.7.1-alpine

# Add Alpine packages
RUN apk add --update --no-cache \
  bash \
  postgresql-client \
  file \
  tzdata

# Copy app with gems from former build stage
COPY --from=Builder /usr/local/bundle/ /usr/local/bundle/
COPY --from=Builder /app /app

# Set Rails environment variables
ENV RAILS_ENV=development
# ENV RAILS_LOG_TO_STDOUT true
# ENV RAILS_SERVE_STATIC_FILES true
ENV PORT 3000

# Set working directory
WORKDIR /app

# Expose external port
EXPOSE 3000

# Add a script to be executed every time the container starts.
COPY entrypoint_development.sh /usr/bin/
RUN chmod +x /usr/bin/entrypoint_development.sh
ENTRYPOINT ["/usr/bin/entrypoint_development.sh"]